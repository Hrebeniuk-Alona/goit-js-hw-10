{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst inputDate = document.querySelector('input[type = \"text\"]');\nconst btnStart = document.querySelector(\"button[data-start]\");\nconst clockface = document.querySelector(\".timer\");\n\nbtnStart.addEventListener(\"click\", handleClick);\n\nbtnStart.disabled = true;\nlet userSelectedDate = null;\nlet timer = null;\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    handleDateSelection(selectedDates);\n  },\n};\n\nflatpickr(inputDate, options);\n\n\n\nfunction handleClick() {\n  btnStart.disabled = true;\n  inputDate.disabled = true;\n\n  timer=setInterval(() => {\n    const time = userSelectedDate - Date.now();\n    if (time <= 0) {\n      clearInterval(timer);\n      clockface.textContent = \"00:00:00:00\";\n      inputDate.disabled = false;\n\n      return;\n    }\n    \n    const { days, hours, minutes, seconds } = convertMs(time)\n\n    clockface.textContent=`${addLeadingZero(days)}:${addLeadingZero(hours)}:${addLeadingZero(minutes)}:${addLeadingZero(seconds)}`;\n  }, 1000)\n  \n\n}\n\n\nfunction handleDateSelection(selectedDates) {\n  if (selectedDates[0] < Date.now()) {\n    iziToast.show({\n      title: \"Error\",\n      titleColor: \"#fafafb\",\n      message: `Please choose a date in the future`,\n      messageColor: \"#fafafb\",\n      position: 'topRight',\n      backgroundColor: \"#EF4040\",\n      iconUrl: iconError\n    })\n    btnStart.disabled = true;\n    return\n  } else {\n    userSelectedDate = selectedDates[0];\n    btnStart.disabled = false;\n  }\n    \n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2,\"0\");\n}\n\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["inputDate","btnStart","clockface","handleClick","userSelectedDate","timer","options","selectedDates","handleDateSelection","flatpickr","time","days","hours","minutes","seconds","convertMs","addLeadingZero","iziToast","value","ms"],"mappings":"2GAOA,MAAMA,EAAY,SAAS,cAAc,sBAAsB,EACzDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,cAAc,QAAQ,EAEjDD,EAAS,iBAAiB,QAASE,CAAW,EAE9CF,EAAS,SAAW,GACpB,IAAIG,EAAmB,KACnBC,EAAQ,KAGZ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAoBD,CAAa,CAClC,CACH,EAEAE,EAAUT,EAAWM,CAAO,EAI5B,SAASH,GAAc,CACrBF,EAAS,SAAW,GACpBD,EAAU,SAAW,GAErBK,EAAM,YAAY,IAAM,CACtB,MAAMK,EAAON,EAAmB,KAAK,IAAG,EACxC,GAAIM,GAAQ,EAAG,CACb,cAAcL,CAAK,EACnBH,EAAU,YAAc,cACxBF,EAAU,SAAW,GAErB,MACD,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAI,EAExDR,EAAU,YAAY,GAAGc,EAAeL,CAAI,CAAC,IAAIK,EAAeJ,CAAK,CAAC,IAAII,EAAeH,CAAO,CAAC,IAAIG,EAAeF,CAAO,CAAC,EAC7H,EAAE,GAAI,CAGT,CAGA,SAASN,EAAoBD,EAAe,CAC1C,GAAIA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAI,CACjCU,EAAS,KAAK,CACZ,MAAO,QACP,WAAY,UACZ,QAAS,qCACT,aAAc,UACd,SAAU,WACV,gBAAiB,UACjB,QAAS,SACf,CAAK,EACDhB,EAAS,SAAW,GACpB,MACJ,MACIG,EAAmBG,EAAc,CAAC,EAClCN,EAAS,SAAW,EAGxB,CAEA,SAASe,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAE,GAAG,CACrC,CAIA,SAASH,EAAUI,EAAI,CAMrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAC1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EACpCN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EACjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}